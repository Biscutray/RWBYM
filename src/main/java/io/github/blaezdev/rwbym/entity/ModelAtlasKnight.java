// Date: 12/29/2018 6:13:47 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package io.github.blaezdev.rwbym.entity;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class ModelAtlasKnight extends ModelBase
{
  //fields
    ModelRenderer head;
    ModelRenderer neck;
    ModelRenderer body;
    ModelRenderer bodyinner;
    ModelRenderer leftarm1;
    ModelRenderer leftarm2;
    ModelRenderer leftarminner1;
    ModelRenderer leftarminner2;
    ModelRenderer rightarm1;
    ModelRenderer rightarm2;
    ModelRenderer rightarminner1;
    ModelRenderer rightarminner2;
    ModelRenderer Cod1;
    ModelRenderer Cod2;
    ModelRenderer Cod3;
    ModelRenderer Cod4;
    ModelRenderer leftleg1;
    ModelRenderer leftleg2;
    ModelRenderer leftleginner;
    ModelRenderer rightleg1;
    ModelRenderer rightleg2;
    ModelRenderer rightleginner;
    ModelRenderer Shape1;
    ModelRenderer Shape2;
    ModelRenderer Shape3;
    ModelRenderer Shape4;
    ModelRenderer Shape5;
    ModelRenderer Shape6;
  
  public ModelAtlasKnight()
  {
    textureWidth = 64;
    textureHeight = 64;
    
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-3F, -7F, -3.5F, 6, 7, 7);
      head.setRotationPoint(0F, -1F, -0.5F);
      head.setTextureSize(64, 64);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      neck = new ModelRenderer(this, 4, 26);
      neck.addBox(-2F, 0F, -2F, 3, 10, 3);
      neck.setRotationPoint(0.5F, -2F, 0F);
      neck.setTextureSize(64, 64);
      neck.mirror = true;
      setRotation(neck, 0F, 0F, 0F);
      body = new ModelRenderer(this, 17, 16);
      body.addBox(-4F, 0F, -2F, 8, 6, 7);
      body.setRotationPoint(0F, 0F, -2F);
      body.setTextureSize(64, 64);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      bodyinner = new ModelRenderer(this, 18, 30);
      bodyinner.addBox(-3.5F, 0.1F, -2.5F, 7, 6, 6);
      bodyinner.setRotationPoint(0F, 0F, -1F);
      bodyinner.setTextureSize(64, 64);
      bodyinner.mirror = true;
      setRotation(bodyinner, 0F, 0F, 0F);
      leftarm1 = new ModelRenderer(this, 51, 43);
      leftarm1.addBox(-0.5F, -1.5F, -1.6F, 3, 6, 3);
      leftarm1.setRotationPoint(4F, 1F, -0.5F);
      leftarm1.setTextureSize(64, 64);
      leftarm1.mirror = true;
      setRotation(leftarm1, 0F, 0F, 0F);
      leftarm2 = new ModelRenderer(this, 51, 53);
      leftarm2.addBox(-0.5F, 5.3F, -1.5F, 3, 6, 3);
      leftarm2.setRotationPoint(4F, 1F, -0.5F);
      leftarm2.setTextureSize(64, 64);
      leftarm2.mirror = true;
      setRotation(leftarm2, 0F, 0F, 0F);
      leftarminner1 = new ModelRenderer(this, 40, 43);
      leftarminner1.addBox(0F, -0.5F, -1.5F, 2, 3, 3);
      leftarminner1.setRotationPoint(4F, 1F, -0.5F);
      leftarminner1.setTextureSize(64, 64);
      leftarminner1.mirror = true;
      setRotation(leftarminner1, 0F, 0F, 0F);
      leftarminner2 = new ModelRenderer(this, 41, 50);
      leftarminner2.addBox(0F, 2.5F, -1F, 2, 9, 2);
      leftarminner2.setRotationPoint(4F, 1F, -0.5F);
      leftarminner2.setTextureSize(64, 64);
      leftarminner2.mirror = true;
      setRotation(leftarminner2, 0F, 0F, 0F);
      rightarm1 = new ModelRenderer(this, 51, 0);
      rightarm1.addBox(-2.5F, -1.5F, -1.6F, 3, 6, 3);
      rightarm1.setRotationPoint(-4F, 1F, -0.5F);
      rightarm1.setTextureSize(64, 64);
      rightarm1.mirror = true;
      setRotation(rightarm1, 0F, 0F, 0F);
      rightarm1.mirror = false;
      rightarm2 = new ModelRenderer(this, 30, 0);
      rightarm2.addBox(-2.5F, 5.3F, -1.5F, 3, 6, 3);
      rightarm2.setRotationPoint(-4F, 1F, -0.5F);
      rightarm2.setTextureSize(64, 64);
      rightarm2.mirror = true;
      setRotation(rightarm2, 0F, 0F, 0F);
      rightarm2.mirror = false;
      rightarminner1 = new ModelRenderer(this, 40, 43);
      rightarminner1.addBox(-2F, -0.5F, -1.5F, 2, 3, 3);
      rightarminner1.setRotationPoint(-4F, 1F, -0.5F);
      rightarminner1.setTextureSize(64, 64);
      rightarminner1.mirror = true;
      setRotation(rightarminner1, 0F, 0F, 0F);
      rightarminner1.mirror = false;
      rightarminner2 = new ModelRenderer(this, 41, 50);
      rightarminner2.addBox(-2F, 2.5F, -1F, 2, 9, 2);
      rightarminner2.setRotationPoint(-4F, 1F, -0.5F);
      rightarminner2.setTextureSize(64, 64);
      rightarminner2.mirror = true;
      setRotation(rightarminner2, 0F, 0F, 0F);
      rightarminner2.mirror = false;
      Cod1 = new ModelRenderer(this, 0, 43);
      Cod1.addBox(-2F, 0F, -3F, 8, 3, 6);
      Cod1.setRotationPoint(-2F, 9F, -0.5F);
      Cod1.setTextureSize(64, 64);
      Cod1.mirror = true;
      setRotation(Cod1, 0F, 0F, 0F);
      Cod2 = new ModelRenderer(this, 0, 53);
      Cod2.addBox(1.5F, 2.5F, -2F, 3, 1, 1);
      Cod2.setRotationPoint(-3F, 9F, -1.5F);
      Cod2.setTextureSize(64, 64);
      Cod2.mirror = true;
      setRotation(Cod2, 0F, 0F, 0F);
      Cod3 = new ModelRenderer(this, 0, 56);
      Cod3.addBox(2.5F, 3.2F, -2F, 1, 1, 1);
      Cod3.setRotationPoint(-3F, 9F, -1.5F);
      Cod3.setTextureSize(64, 64);
      Cod3.mirror = true;
      setRotation(Cod3, 0F, 0F, 0F);
      Cod4 = new ModelRenderer(this, 9, 53);
      Cod4.addBox(-1.5F, 2.5F, 1.8F, 7, 1, 1);
      Cod4.setRotationPoint(-2F, 9F, -0.5F);
      Cod4.setTextureSize(64, 64);
      Cod4.mirror = true;
      setRotation(Cod4, 0F, 0F, 0F);
      leftleg1 = new ModelRenderer(this, 49, 15);
      leftleg1.addBox(-1.5F, 0.7F, -2F, 3, 5, 4);
      leftleg1.setRotationPoint(2.5F, 12F, -0.5F);
      leftleg1.setTextureSize(64, 64);
      leftleg1.mirror = true;
      setRotation(leftleg1, 0F, 0F, 0F);
      leftleg2 = new ModelRenderer(this, 26, 54);
      leftleg2.addBox(-1.5F, 6F, -2F, 3, 6, 4);
      leftleg2.setRotationPoint(2.5F, 12F, -0.5F);
      leftleg2.setTextureSize(64, 64);
      leftleg2.mirror = true;
      setRotation(leftleg2, 0F, 0F, 0F);
      leftleginner = new ModelRenderer(this, 53, 26);
      leftleginner.addBox(-1F, 0F, -1.5F, 2, 12, 3);
      leftleginner.setRotationPoint(2.5F, 12F, -0.5F);
      leftleginner.setTextureSize(64, 64);
      leftleginner.mirror = true;
      setRotation(leftleginner, 0F, 0F, 0F);
      leftleginner.mirror = false;
      rightleg1 = new ModelRenderer(this, 49, 15);
      rightleg1.addBox(-1.5F, 0.7F, -2F, 3, 5, 4);
      rightleg1.setRotationPoint(-2.5F, 12F, -0.5F);
      rightleg1.setTextureSize(64, 64);
      rightleg1.mirror = true;
      setRotation(rightleg1, 0F, 0F, 0F);
      rightleg2 = new ModelRenderer(this, 26, 54);
      rightleg2.addBox(-1.5F, 6F, -2F, 3, 6, 4);
      rightleg2.setRotationPoint(-2.5F, 12F, -0.5F);
      rightleg2.setTextureSize(64, 64);
      rightleg2.mirror = true;
      setRotation(rightleg2, 0F, 0F, 0F);
      rightleginner = new ModelRenderer(this, 53, 26);
      rightleginner.addBox(-1F, 0F, -1.5F, 2, 12, 3);
      rightleginner.setRotationPoint(-2.5F, 12F, -0.5F);
      rightleginner.setTextureSize(64, 64);
      rightleginner.mirror = true;
      setRotation(rightleginner, 0F, 0F, 0F);
      Shape1 = new ModelRenderer(this, 10, 58);
      Shape1.addBox(0F, 0F, 0F, 1, 4, 1);
      Shape1.setRotationPoint(-3.5F, 6F, -3F);
      Shape1.setTextureSize(64, 64);
      Shape1.mirror = true;
      setRotation(Shape1, 0F, 0F, -0.0872665F);
      Shape2 = new ModelRenderer(this, 16, 58);
      Shape2.addBox(-1F, 0F, 0F, 1, 4, 1);
      Shape2.setRotationPoint(3.5F, 6F, -3F);
      Shape2.setTextureSize(64, 64);
      Shape2.mirror = true;
      setRotation(Shape2, 0F, 0F, 0.0872665F);
      Shape3 = new ModelRenderer(this, 23, 43);
      Shape3.addBox(0F, 0F, 0F, 1, 2, 3);
      Shape3.setRotationPoint(-3.5F, 8F, -1F);
      Shape3.setTextureSize(64, 64);
      Shape3.mirror = true;
      setRotation(Shape3, 0F, 0.3490659F, -0.2617994F);
      Shape4 = new ModelRenderer(this, 23, 43);
      Shape4.addBox(-1F, 0F, 0F, 1, 2, 3);
      Shape4.setRotationPoint(3.5F, 8F, -1F);
      Shape4.setTextureSize(64, 64);
      Shape4.mirror = true;
      setRotation(Shape4, 0F, -0.3490659F, 0.2617994F);
      Shape4.mirror = false;
      Shape5 = new ModelRenderer(this, 0, 40);
      Shape5.addBox(-1.5F, 9F, -1.5F, 2, 1, 2);
      Shape5.setRotationPoint(0.5F, -1F, 0F);
      Shape5.setTextureSize(64, 64);
      Shape5.mirror = true;
      setRotation(Shape5, 0F, 0F, 0F);
      Shape6 = new ModelRenderer(this, 32, 43);
      Shape6.addBox(-1.5F, 7F, 0F, 2, 3, 2);
      Shape6.setRotationPoint(0.5F, -1F, 0F);
      Shape6.setTextureSize(64, 64);
      Shape6.mirror = true;
      setRotation(Shape6, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    head.render(f5);
    neck.render(f5);
    body.render(f5);
    bodyinner.render(f5);
    leftarm1.render(f5);
    leftarm2.render(f5);
    leftarminner1.render(f5);
    leftarminner2.render(f5);
    rightarm1.render(f5);
    rightarm2.render(f5);
    rightarminner1.render(f5);
    rightarminner2.render(f5);
    Cod1.render(f5);
    Cod2.render(f5);
    Cod3.render(f5);
    Cod4.render(f5);
    leftleg1.render(f5);
    leftleg2.render(f5);
    leftleginner.render(f5);
    rightleg1.render(f5);
    rightleg2.render(f5);
    rightleginner.render(f5);
    Shape1.render(f5);
    Shape2.render(f5);
    Shape3.render(f5);
    Shape4.render(f5);
    Shape5.render(f5);
    Shape6.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor, Entity entityIn)
  {

    {
      this.head.rotateAngleX = headPitch * 0.017453292F;
    }

    this.body.rotateAngleY = 0.0F;
    this.bodyinner.rotateAngleY = 0.0F;
    this.Cod1.rotateAngleY = 0.0F;
    this.Cod1.rotateAngleY = 0.0F;
    this.Cod2.rotateAngleY = 0.0F;
    this.Cod3.rotateAngleY = 0.0F;
    this.Cod4.rotateAngleY = 0.0F;
    this.rightarm1.rotationPointZ = 0.0F;
    this.rightarm1.rotationPointX = -5.0F;
    this.rightarm2.rotationPointZ = 0.0F;
    this.rightarm2.rotationPointX = -5.0F;
    this.rightarminner1.rotationPointZ = 0.0F;
    this.rightarminner1.rotationPointX = -5.0F;
    this.rightarminner2.rotationPointZ = 0.0F;
    this.rightarminner2.rotationPointX = -5.0F;
    this.leftarm1.rotationPointZ = 0.0F;
    this.leftarm1.rotationPointX = 5.0F;
    this.leftarm2.rotationPointZ = 0.0F;
    this.leftarm2.rotationPointX = 5.0F;
    this.leftarminner1.rotationPointZ = 0.0F;
    this.leftarminner1.rotationPointX = 5.0F;
    this.leftarminner2.rotationPointZ = 0.0F;
    this.leftarminner2.rotationPointX = 5.0F;
    float f = 1.0F;

    if (f < 1.0F)
    {
      f = 1.0F;
    }

    this.rightarm1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F / f;
    this.rightarm2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F / f;
    this.rightarminner1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F / f;
    this.rightarminner2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 2.0F * limbSwingAmount * 0.5F / f;
    this.leftarm1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F / f;
    this.leftarm2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F / f;
    this.leftarminner1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F / f;
    this.leftarminner2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 2.0F * limbSwingAmount * 0.5F / f;
    this.rightarm1.rotateAngleZ = 0.0F;
    this.rightarm2.rotateAngleZ = 0.0F;
    this.rightarminner1.rotateAngleZ = 0.0F;
    this.rightarminner2.rotateAngleZ = 0.0F;
    this.leftarm1.rotateAngleZ = 0.0F;
    this.leftarm2.rotateAngleZ = 0.0F;
    this.leftarminner1.rotateAngleZ = 0.0F;
    this.leftarminner2.rotateAngleZ = 0.0F;
    this.rightleg1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount / f;
    this.rightleg2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount / f;
    this.rightleginner.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F) * 1.4F * limbSwingAmount / f;
    this.leftleg1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount / f;
    this.leftleg2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount / f;
    this.leftleginner.rotateAngleX = MathHelper.cos(limbSwing * 0.6662F + (float)Math.PI) * 1.4F * limbSwingAmount / f;
    this.rightleg1.rotateAngleY = 0.0F;
    this.rightleg2.rotateAngleY = 0.0F;
    this.rightleginner.rotateAngleY = 0.0F;
    this.leftleg1.rotateAngleY = 0.0F;
    this.leftleg2.rotateAngleY = 0.0F;
    this.leftleginner.rotateAngleY = 0.0F;
    this.rightleg1.rotateAngleZ = 0.0F;
    this.rightleg2.rotateAngleZ = 0.0F;
    this.rightleginner.rotateAngleZ = 0.0F;
    this.leftleg1.rotateAngleZ = 0.0F;
    this.leftleg2.rotateAngleZ = 0.0F;
    this.leftleginner.rotateAngleZ = 0.0F;
  }

}
